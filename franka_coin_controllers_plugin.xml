<library path="lib/libfranka_coin_controllers">
  <class name="franka_coin_controllers/CartesianPoseExampleController" type="franka_coin_controllers::CartesianPoseExampleController" base_class_type="controller_interface::ControllerBase">
    <description>
      A controller that executes a short motion based on cartesian poses to demonstrate correct usage
    </description>
  </class>
  <class name="franka_coin_controllers/CartesianVelocityExampleController" type="franka_coin_controllers::CartesianVelocityExampleController" base_class_type="controller_interface::ControllerBase">
    <description>
      A controller that executes a short motion based on cartesian velocities to demonstrate correct usage
    </description>
  </class>
  <class name="franka_coin_controllers/CartesianImpedanceExampleController" type="franka_coin_controllers::CartesianImpedanceExampleController" base_class_type="controller_interface::ControllerBase">
    <description>
      A controller that renders a spring damper system in cartesian space. Compliance parameters and the equilibrium pose can be modified online with dynamic reconfigure and an interactive marker respectively.
    </description>
  </class>
  <class name="franka_coin_controllers/CurlFieldForceController" type="franka_coin_controllers::CurlFieldForceController" base_class_type="controller_interface::ControllerBase">
    <description>
      A controller that renders a curl force controller dependent on the cartesian velocity of the end-effector.
    </description>
  </class>
  <class name="franka_coin_controllers/ForceExampleController" type="franka_coin_controllers::ForceExampleController" base_class_type="controller_interface::ControllerBase">
    <description>
      A PI controller that applies a force corresponding to a user-provided desired mass in the z axis. The desired mass value can be modified online with dynamic reconfigure.
    </description>
  </class>
  <class name="franka_coin_controllers/LQRStepController" type="franka_coin_controllers::LQRStepController" base_class_type="controller_interface::ControllerBase">
    <description>
      A basic LQR optimal controller that applies a force to move the robot in a straight line to its goal, as given by a step reference target.
    </description>
  </class>
  <class name="franka_coin_controllers/COINSpontaneousController" type="franka_coin_controllers::COINSpontaneousController" base_class_type="controller_interface::ControllerBase">
    <description>
      A LQR optimal controller that loads COIN estimates and uses it in adaptive control testing.
    </description>
  </class>
</library>
